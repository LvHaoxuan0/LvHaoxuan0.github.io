(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{285:function(t,e,i){"use strict";i.r(e),e.default=[{title:"实训笔记",path:"/posts/%E5%AE%9E%E8%AE%AD.html",strippedContent:' ## 2019.12.23    第十七周    周一    实训第一天    1.安装 nodejs。  2.安装 typora。(.md文件编辑器)  3.安装 jquery。  4.注册 github。    (代码托管器)  5.学习 github菜鸟教程。    https://www.runoob.com/git/git-tutorial.html  注：  1.ctrl + / 是查看源代码。  2.保存文件后缀名为.md。  3.代码符号输入后必须加空格。    ## 2019.12.24    第十七周    周二    实训第二天    1.安装Git。    (上传工具)  2.打开www.github.com，创建新的代码库，命名为：用户名+.github.io。  3.创建工作文件夹，在文件夹中右键打开Git Bash Hear，输入git clone+粘贴代码库地址。  4.在文件夹中创建index.html，并用记事本方式输入H5格式与内容。  5.右键打开Git Bash Hear。  6.输入git status    (粘贴本人地址)  7.输入git add .    (检查状态)  8.输入git commit -m"(注释)"     （提交版本库）  9.输入git push    (上传)  10.上传邮箱。  11.上传用户名。  12.复制新手教程。  13.输入账号密码。  14.刷新页面，出现上传文件。  15.复制    用户名+.github.io，打开新网页粘贴。    ## 2019.12.25    第十七周    周三    实训第三天  1.npm    (国外的下载)。  2.cnpm    (国内镜像)。  3.输入npm -v。  4.百度淘宝镜像，复制使用说明，粘贴至c盘根目录cmd。  5.等待下载，下载完成在cmd中输入cnpm -v。  6.输入cnpm install -g @vue/cli。  7.输入vue -V。  8.输入cnpm i -g vuepress。  9.百度vuepress官网学习。  10.建立工作文件夹，命名用英文。  11.创建README.md文件。  12.cmd命令打开文件夹。  13.输入vuepress dev .。  14.复制链接，打开浏览器。    ## 2019.12.26    第十七周    周四    实训第四天    1.创建文件夹，命名为vuepress。  2.右键打开Git Bash Hear。  3.百度liujiaozhu666.github.io。  4.点击页面最下方indigo material。  5.复制模板分支命令，粘贴至git。  6.运行init.sh。  7.后续运行在文件夹cmd中输入npm run dev。  8.复制链接百度打开。  9.修改方式：vue...->docs->.vuepress->config.js。  10.可修改项：title，description，author，email，github。    ## 2019.12.27    第十七周    周五    实训第五天    1.创建.md文件。  2.将文件拖入vuepress->docs->posts。  3.编辑.md文件：    title: 标题。    date: 时间。    tags: [类型]。    4.下一行开始输入内容。  5.在文件夹cmd中输入npm run dev。  6.复制链接百度打开。  7.在vue...->node_...->deploy.sh中，第一行！前加 # 注释，最下方20行(git push -f ...)删除 #，修改地址。  8.在文件夹cmd中输入npm run build，打包完成。  9.双击文件夹中deploy.sh。  10.打开github官网查看是否打包上传成功。'},{title:"JS知识点",path:"/posts/js.html",strippedContent:" ```  1、javaScript的概念:是一种表述语言，也是一种基于对象(Object)和事件驱动(EventDriven)的，安全性好的脚本语言，运行在客户端，从而减轻服务器端的负担，总结如下：     1.javaScript主要用来向HTML页面找那个添加交互行为。     2.javaScript是一种脚本语言，语法和java类似。     3.javaScript一般用来编写客户端脚本。     4.javaScript是一种解释性语言，边执行边解释。    2、javaScript由核心语法ECMAScript、浏览器对象模型(BOM) 主要用于管理窗口与窗口之间的通讯，因此其核心对象是window、文档对象模型(DOM)三部分组成.    3、网页中引入javaScript三种方式:     1.使用<Script><\/Script>标签内部样式     2.使用外部js文件     3.直接在HTML标签中的行内样式。    4.javaScript的作用    1.实现页面表单验证    2.实现页面交互特效    5.javaScript的特点     1.被设计用来向Html页面添加交互行为     2.是一种英特网上最流行的脚本语言     3.一般用于编写客户端脚本     4．是一种解释性语言    6.引入javaScript的方式      1.使用<Script>标签直接嵌入网页      2.使用外部js文件    Js中String对象常用的方法：    toString(包前不包后),2.toLowerCase();toUpperCase();    charAt(index);返回在指定位置的字符，indexOf(str,index);指定字符串中首次出现的位置;split(str);将字符串分割为字符串数组    在javaScript中条件语句Switch(){}可以接字符串；    alert(“提示信息”)；      var isOk=confirm(“确认框“);//如果确认返回true,否则返回false      prompt();prompt(“提示信息”，“输入框默认信息”);    prompt(“请输入姓名”)      close();      open();      setTimeout();在指定毫秒之后调用某个函数      setInterval();在指定周期毫秒来调用某个函数    window.open();    7.Js语法：    1.区分大小写    2.注意变量，函数等命名规范    3.每行代码以分号结束    Js中的函数：    1.系统函数       ParseInt();转换为整数 45.9a转换为45；a6转换返回为NaN(Not a Number)      isNaN(判断是不是数字)      typeof(var);判断是什么数据类型      eval(“5+2”);计算表达式值    2.自定义函数     Function 函数名(){javaScript代码}     Function 函数名(参数1，参数2){javaScript代码 return 返回值(可选)}    Js中函数的调用:    事件名=“函数名(传递的参数值)“;    函数名(传递的参数值);    匿名函数:    匿名函数的声明：    Var 变量名=function(参数){ 函数体 return 返回值；} ;    调用    变量名(参数)    8.程序调用     1.添加alert();方法 2.使用fireBug();方法    9.BOM概述：(Browser Object Model,浏览器对象模型)     1.window对象的属性    Weindow对象常用的方法：prompt()confirm();setTimeout();setInterval();    Window对象常用的事件：onload=”” onmouseover=””;onclick    window.parent.location    2.History对象     方法：back() ;forward();go();    3.Location对象提供当前页面的URL     属性：host hostname href     方法:reload() replace();    4.Document对象     属性:referrer属性判断是不是通过超链接访问的，不是返回null    10.javaScript中的对象，      Date对象:     创建date对象发方法var date=new Date(MM DD ,YYYY,hh:mm:ss);    var date=new Date(); date.getDay();      Math对象：       Ceil();对数进行向上取整，ceil(25.5)=26;      Floor();向下取整，floor(25.5)=25;       Math.round(25.5);在原数的加0.5后向下取整    11.Dom概述(文档对象模型)     由CoreDom,XMLDom,HTML Dom组成；    12.创建数组      Js中变量的声明:      Var 数组名称=new Array(size);    先声明再赋值 fruit[0]=””    声明同时赋值 var fruit=new Array(“apple”,”orange”);或 var fruit=new Array[“apple”,”orange”];    读取1.使用for循环读取 2.使用for---in读取    For(var x in fruit){document.write(fruit[x]+”<br/>”)}x为下标    Fruit.sort();//排序 string str=fruit.join(“-”);//添加字符串后连接成一个字符串。    13、 style 定位方面的样式    　　left top position z-index    　　鼠标滚动距离：scorllTop:纵向距离    　　　　　　　　　scorllLeft:横向距离    　　鼠标滚动事假：onscorll    Jquery对象与Dom对象的相互转换    jquery对象转换为DOMD对象，jquery提供两种方法将jquery对象转换为DOM对象，即[index]和get(index),    var $txtName=$(“#txtName”);//jquery对象    var txtName=$txtName[0];//Dom对象    alert(txtName.checked);//检测这个checkbox是否被选中    通过get(index)方法得到对应的Dom对象    Var $txtName=$(“#txtName”);//jquery对象    Var txtName=$txtName.get(0);//Dom对象    alert(txtName.checked);//检测这个checkbox是否被选中    Dom对象转换为jQuery对象    Var txtName=document.getElementById(“txtName”);//dom对象    Var $txtName=$(txtName);//    Dom中添加class属性使用obj.className=classname;       添加类容使用obj.innerHtml=<input />    Jquery中添加class属性使用obj.addClaa=classname;       添加类容使用：obj.html=<input/>;    Jqurey中的五大选择器：    基本选择器 (# . 标签)    层次选择器(后代 >子  +相邻  ~同辈)    属性选择器(P[class=name])    过滤选择器(“tr:even”)    可见性选择器(“p:hidden” “p:viside”)    Jquery中的事件：      Obj.bind(“clike”,function(){});    obj.bind({mousever:function(){},{mouserout:function(){}}});     obj.unbind();    obj.hover(function(){},function(){})方法集合onmouseOver和onmouseOut    obj.toggle();    $(“.tipsbox”).show();obj.hide();    $(“img”).fadeIn(1000);    $(“.txt”).slideUp(1000); obj.slideDown(1000);    Obj.toggleClass(“class”);//集成了addClass和romoveClass    $(this).val(“”);//清空文本内容    Var $newNode=$(<”<li>用jquery创建新元素节点</li>”>);  ```    "},{title:"CSS知识点",path:"/posts/css.html",strippedContent:" 1.盒模型    可以通过设置box-sizing设置    content-box(标准盒模型)：width==content内容区域宽    border-box(IE盒模型)：width == border宽度+content内容宽度+padding宽度    2.BFC    块级格式化上下文，是一个独立的渲染区域，让处于 BFC 内部的元素与外部的元素相互隔离，使内外元素的定位不会相互影响。触发条件：根元素有一下某一个样式则出发bfc    position :absolute/fixed    display : inline-block/table    float    overflow !== visible    BFC的区域不会与float的元素区域重叠    文字层不会被浮动层覆盖环绕在周围    计算BFC高度时，浮动元素也参与计算    应用：    防止margin重叠    阻止元素被浮动元素覆盖    清除内部浮动（原理是两个div位于同一个bfc区域）    自适应两栏布局    3.居中布局    水平居中    行内元素：text-aligin:center    块级元素：margin：0 auto;    绝对定位已知宽度:position:absolute;margin-left:-(宽度的一半);left:50%;    绝对定位和transform:position: absolute;left: 50%;transform:translateX(-50%);    弹性布局水平居中：diaplay:flex;justify-content: center；    垂直居中    1.line-height:height;高度设置和盒子一样高    2.绝对定位和transform:position: absolute;top: 50%;transform:translateY(-50%);    3.弹性布局水平居中：diaplay:flex;algin-items: center；    4.绝对定位已知高度:position:absolute;margin-top:-(高度的一半);top:50%;     4.选择器的优先级    1.选择器越具体优先级越大    2.同等优先级写在后面的会覆盖前面的    3.加上！important 优先级最高    4选择器从右向左解析    !important > 行内样式 > #id > .class > tag > * > 继承 > 默认         5.link和import的区别？    @import只能用于加载css,兼容性不好，IE5以上才可以使用，@import只能等页面加载完之后才可以加载css    link当页面解析时，linky引入的css同步解析，link可以使用js动态导入，无兼容问题，还可以定义RSS,REL等作用    6.CSS预处理器（less/sass/styuls）    css预处理器的原理是：通过webpack编译转换成浏览器可读的css,在编译之前我们可以赋予预处理一些强大的功能    变量，嵌套，循环语句，条件语句，自动前缀，单位转换。    7.css3动画    过渡动画：transition     transition-proterty:设置过渡效果的名称 如width    transition-duration:时间    transition-timing-function:曲线    transition-delay:延迟时间    9.弹性布局    display:flex/display:inline-flex    有六个属性设置在容器上    flex-direction 决定主轴方向，row水平起点左侧 row-reverse水平起点右侧 column垂直起点上 column-reverse 垂直起点下    flex-wrap 可以决定是否换行 nowrap不换行 wrap第一行在上面 wrap-reverse第一行在下面    flex-flow 是flex-direction和flex-wrap的简写    justify-content 定义了在主轴的X对齐方式 flex-start 左对齐flex-end 右对齐center居中 space-between两端对齐间隔相等 space-around两侧间隔相等，项目之间比两侧大一倍    align-items 定义在Y轴的对齐方式 flex-start起点对齐 flex-end 终点对齐 center中间对齐 baseline与第一行文字的基线对齐 strech默认值，如果未设置高度则充满容器    aligin-content 定义了多根轴线的对齐方式 flex-start 起点对齐 flex-end 终点对齐 center 中间对齐 space-between 两端对齐 轴线之间平均分布 space-around 线轴两侧间隔相等，线轴之间间隔比两侧大一倍 stretch 默认值 线轴沾满交叉轴。"},{title:"HTML知识点",path:"/posts/html.html",strippedContent:' ```  一、基本知识    HTML 指的是超文本标记语言: HyperText Markup Language    HTML 标记标签通常被称为 HTML 标签 (HTML tag)  <标签>内容</标签>    HTML 元素包含了开始标签与结束标签，元素的内容是开始标签与结束标签之间的内容，元素属性是 HTML 元素提供的附加信息。    <!DOCTYPE html> 声明为 HTML5 文档  <html> 元素是 HTML 页面的根元素  <head> 元素包含了文档的元（meta）数据，如 <meta charset="utf-8"> 定义网页编码格式为 utf-8。  <title> 元素描述了文档的标题，浏览器标签名  <body> 元素包含了可见的页面内容  <h1> 元素定义一个大标题  <p> 元素定义一个段落  \x3c!-- 内容 --\x3e注释内容    二、元素属性    HTML元素属性一般在开始标签中，以键值对表示。    <a href="http://www.baidu.com">表示链接</a>    三、头部    <head> 元素包含了所有的头部标签元素。    可以添加在头部区域的元素标签为: <title>, <style>, <meta>, <link>, <script>, <noscript>, and <base>.    <title> 元素定义文档的标题。浏览器会以特殊的方式来使用标题，并且通常把它放置在浏览器窗口的标题栏或状态栏上。同样，当把文档加入用户的链接列表或者收藏夹或书签列表时，标题将成为该文档链接的默认名称。  <style> 标签用于为 HTML 文档定义样式信息。在 style 中，可以规定在浏览器中如何呈现 HTML 文档。  <meta> 元素可提供有关页面的元信息（meta-information），比如针对搜索引擎和更新频度的描述和关键词。<meta> 标签没有结束标签。    <link> 标签定义了文档与外部资源之间的关系。最常见的用途是链接样式表。    <script>标签用于加载脚本文件，如： JavaScript。  <noscript> 元素用来定义在脚本未被执行时的替代内容（文本）。  <base> 标签为页面上的所有链接规定默认地址或默认目标。    四、主体    body 元素定义文档的主体。    body 元素包含文档的所有内容（比如文本、超链接、图像、表格和列表等等），最为常见的有:    1.<h1> 定义最大的标题。 <h6> 定义最小的标题。标题（Heading）是通过 <h1> - <h6> 标签进行定义的.    2.<hr> 标签在 HTML 页面中创建水平线。    3.<p> 标签定义段落。如果在不产生一个新段落的情况下进行换行（新行），请使用 <br> 标签。    4.<a> 标签定义超链接，用于从一张页面链接到另一张页面。<a> 元素最重要的属性是 href 属性，它指示链接的目标。    5.<img> 元素向网页中嵌入一幅图像,<img> 标签有两个必需的属性：src 属性 和 alt 属性。src 指 "source"。源属性的值是图像的 URL 地址。alt 属性用来为图像定义一串预备的可替换的文本。    6.HTML表格由 <table> 标签来定义。每个表格均有若干行（由 <tr> 标签定义），每行被分割为若干单元格（由 <td> 标签定义）。字母 td 指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。    7.无序列表是一个项目的列表，此列项目使用粗体圆点（典型的小黑圆圈）进行标记。无序列表使用 <ul> 标签    8.有序列表也是一列项目，列表项目使用数字进行标记。 有序列表始于 <ol> 标签。每个列表项始于 <li> 标签。列表项使用数字来标记。    9.<div> 可定义文档中的分区或节（division/section）。    <div> 标签可以把文档分割为独立的、不同的部分。它可以用作严格的组织工具，并且不使用任何格式与其关联。      如果用 id 或 class 来标记 <div>，那么该标签的作用会变得更加有效。    10.<form> 标签用于为用户输入创建 HTML 表单。    表单能够包含 input 元素，比如文本字段、复选框、单选框、提交按钮等等。    表单还可以包含 menus、textarea、fieldset、legend 和 label 元素。    表单用于向服务器传输数据。  ```    '}]}}]);